1.1 Database Basics

*Database Application
  -Software that helps business users interact with database systems.
*Database Adminnistrator
  -Responsible for securing the database system against unauthorized users. Enforces procedures for 
user access and database system availability.

1.2 Database Systems
___________________________________________

*Authorization
  -Many database users should have limited access to specific tables, columns, or rows of a database.
Database systems should authorize individual users to access specific data.
*Rules
  -Database systems ensure data is consistent with structural and business rules.
*Query Processor
  -The query processor interprets queriers, creates a plan to modify the database or retrieve data, 
and returns query results to the application.
*Storage Manager
  -The sotrage manager translates the query processor instructions into low-level file commands that modify or retrieve data.
*Transaction Manager
  -Ensures transactions are properly executed.
  -Writes logs before applying changes to the database.
*Metadata
  -Data about the database, such as column names and the number of rows in each table.
*Relational Database
  -Stores data in tables, columns, and rows
  -Similar to a spreadsheet
*Relational databases are good for?
  -Ideal for databases that require an accurate record of every transaction, such as banking, airline reservation systems, and student records.
*SQL
  -Structured Query Language and includes statements that read and write data, create and delete tables, and administer the database system.
*Big Data
  -Growth of the internet int he 1990s generated massive volumes of onlinen data, called big data, often with poorly structured or missing information.
  -MongoDB:Big Data, open source, NoSQL
*NoSQL
  -The newer non-relational systems are called NoSQL, for 'not only SQL', and are optimized for big data.
  MongoDB: Big Data, open source, NoSQL
_______________________________________________________________

1.3 Query Languages
___________________________________________________

*INSERT
  -inserts rows into a table.

INSERT INTO table_name (column_name1, column_name2, ...)
                      VALUES (DEFAULT, 'bob', 30, 150);

*SELECT
  -retrieves data from a table

SELECT column1, column2, ...
FROM table_name; -- return all data from those columns.

*UPDATE
  -modifies data in a table
UPDATE table_name
SET   column_name = 2
WHERE column_id = 3;

*DELETE
  -Deletes rows from a table.

DELETE FROM table_name; -- all rows deleted!
DELETE FROM table_name WHERE column_name = 'value'; -- delete row

*CREATE TABLE
  -Creates a new table by specifying the table and column names.

CREATE TABLE Customers (
  customerId    INT NOT NULL UNIQUE,
  first_name    VARCHAR(255) NOT NULL,
  age           INT CHECK(age > 18)
  driverid      INT NOT NULL,
  PRIMARY KEY (customerId),
  FOREIGN KEY (LOCAL_COLUMN_NAME) REFERENCES TABLE_NAME (COLUMN_NAME),
);

______________________________________________________________

1.4 Database Design and Programming
_________________________________________

*Database Design: Analysis
  -Specifies Databases requirements without regards to a specific database system.
  -Requirements are represented as entities, relationships, and attributes.
  -Sometimes called: Conceptual Design
*ER Diagram
  -Entities, relationships, and attributes are depicted in ER diagrams.
*Database Design: Logical Design
  -This phase implements database requirements in a specific database system.
  -For relational database systems, logical design converts entities, relationships, and attributes into tables, keys and columns.
  -**The logical design is called a database schema.**
